from main import bot, dp
from aiogram.types import Message, CallbackQuery
from aiogram import types
from aiogram.dispatcher import FSMContext
from random import randint
from casinostate import Dice_state, Joe_state
from game_bot_function import Win_or_lose_money

k = 3000
fruit = {1: 'üçé', 2: 'üçì', 3: 'üçí', 4: 'üçã', 5: 'ü••'}

head_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
game_button = types.KeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É –∏–≥—ÄüéÆ')
bank_button = types.KeyboardButton(text='–ú–æ–π –±–∞–ª–∞–Ω—Åüí∞')
head_keyboard.add(game_button).add(bank_button)

bank_keyboard = types.ReplyKeyboardMarkup()
cash_button = types.KeyboardButton(text='–í–∏–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏üí∏')
deposit_button = types.KeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –ë–∞–ª–∞–Ω—Åüí≥')
back_button = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
bank_keyboard.add(cash_button).add(deposit_button).add(back_button)

game_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
game_button1 = types.KeyboardButton(text="–ö–æ—Å—Ç–∏üé≤")
game_button2 = types.KeyboardButton(text="–û–¥–Ω–æ—Ä—É–∫–∏–π –î–∂–æüé∞")
back_button = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
game_keyboard.add(game_button1, game_button2).add(back_button)

dice_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
throw1 = types.KeyboardButton(text='–ë—Ä–æ—Å–∏—Ç—å –æ–¥–∏–Ω –∫—É–±–∏–∫')
throw2 = types.KeyboardButton(text='–ë—Ä–æ—Å–∏—Ç—å –¥–≤–∞ –∫—É–±–∏–∫–∞')
change_button = types.KeyboardButton(text='–°–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É')
back_button = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
dice_keyboard.add(throw1, throw2).add(change_button).add(back_button)

rate_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
rate_button = types.KeyboardButton(text='–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É')
back_button = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
rate_keyboard.add(rate_button).add(back_button)

slots_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
wheel_button = types.KeyboardButton(text='–í—Ä–∞—â–∞—Ç—å –±–∞—Ä–∞–±–∞–Ω')
change_button = types.KeyboardButton(text='–°–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É')
back_button = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
slots_keyboard.add(wheel_button).add(change_button).add(back_button)


@dp.message_handler(commands=['start'])
async def start_command(message: Message):
    global k
    k += 3000
    await message.answer('–í—ñ—Ç–∞—î–º–æ —É –Ω–∞—à–æ–º—É –∑–∞–∫–ª–∞–¥—ñ! –Ø–∫—â–æ –≤–∏ —Ç—É—Ç –≤–ø–µ—Ä—à–µ —Ç–æ –≤–∞–º —Å—é–¥–∏  => \n /help',
                         reply_markup=head_keyboard)
    await message.answer_dice()


@dp.message_handler(commands=['help'])
async def help_command(message: Message):
    await message.answer('—Ç—É—Ç –±—É–¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–º–∞–Ω–¥–∏ —Ç–∞ –¥–æ–ø–æ–º—ñ–∂–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä—ñ–π')


@dp.message_handler(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É –∏–≥—ÄüéÆ')
async def game(message: Message):
    await message.answer('–≤–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä', reply_markup=game_keyboard)


@dp.message_handler(text='–ú–æ–π –±–∞–ª–∞–Ω—Åüí∞')
async def bank(message: Message):
    await message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç {k} —Ä—É–±–ª–µ–π', reply_markup=bank_keyboard)


@dp.message_handler(text='–í–∏–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏üí∏')
async def cash_out(message: Message):
    await message.answer('—Ç—É—Ç –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –≤–∏–≤—ñ–¥ –∫–æ—à—Ç—ñ–≤ –Ω–∞ –∫–∞—Ä—Ç—É')


@dp.message_handler(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –ë–∞–ª–∞–Ω—Åüí≥')
async def deposit(message: Message):
    await message.answer('—Ç—É—Ç –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è —ñ–≥—Ä–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å—É')


@dp.message_handler(text='–ù–∞–∑–∞–¥')
async def back(message: Message):
    await message.answer('–í–∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=head_keyboard)


@dp.message_handler(text='–ö–æ—Å—Ç–∏üé≤', state=None)
async def dice(message: Message):
    await message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {k}\n', reply_markup=rate_keyboard)

    await Dice_state.rax.set()


@dp.message_handler(state=Dice_state.rax)
async def rax_msg(message: Message, state: FSMContext):
    if message.text == '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É')
        await Dice_state.rate.set()
    elif message.text == '–ù–∞–∑–∞–¥':
        await state.finish()
        await message.answer('–í–∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –∏–≥—Ä', reply_markup=game_keyboard)


@dp.message_handler(state=Dice_state.rate)
async def rate(message: Message, state: FSMContext):
    global rat, k
    rat = int(message.text)
    if rat <= k:
        await message.answer('–ß—Ç–æ–±–∏ –Ω–∞—á–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –±—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏', reply_markup=dice_keyboard)
        await Dice_state.first.set()
    else:
        await state.finish()
        await message.reply('–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å!')


@dp.message_handler(state=Dice_state.first)
async def throw_dice(message: Message, state: FSMContext):
    global k
    get_text_msg = message.text
    if get_text_msg == '–ë—Ä–æ—Å–∏—Ç—å –æ–¥–∏–Ω –∫—É–±–∏–∫':
        his_num = randint(1, 6)
        bot_num = randint(1, 6)
        if his_num > bot_num:
            k -= rat
            win = Win_or_lose_money(rat).give_cash()
            k += win
            await message.answer(f"–í–∞—à–µ —á–∏—Å–ª–æ: {his_num} \n –ß–∏—Å–ª–æ –±–æ—Ç–∞: {bot_num} \n –í–∞—à–∞ –≤–∑—è–ª–∞! \n "
                                 f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {win} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}", reply_markup=dice_keyboard)
            await Dice_state.first.set()
        elif his_num < bot_num:
            lose = rat
            k -= lose
            await message.answer(f"–í–∞—à–µ —á–∏—Å–ª–æ: {his_num} \n –ß–∏—Å–ª–æ –±–æ—Ç–∞: {bot_num} \n –í–∞—Å –Ω–∞—Å—Ç–∏–≥–ª–∞ –Ω–µ—É–¥–∞—á–∞! \n "
                                 f"–í–∞—à –ø—Ä–æ–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {lose} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}", reply_markup=dice_keyboard)
            await Dice_state.first.set()
        elif his_num == bot_num:
            await message.answer(f"–í–∞—à–µ —á–∏—Å–ª–æ: {his_num} \n –ß–∏—Å–ª–æ –±–æ—Ç–∞: {bot_num} \n –ù–µ—É–∂–µ–ª–∏ –Ω–∏—á—å—è! \n "
                                 "–í—Å–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–∏ —Å–≤–æ—ë–º \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}", reply_markup=dice_keyboard)
            await Dice_state.first.set()
    elif get_text_msg == '–ë—Ä–æ—Å–∏—Ç—å –¥–≤–∞ –∫—É–±–∏–∫–∞':
        his_num1 = randint(1, 6)
        his_num2 = randint(1, 6)
        bot_num1 = randint(1, 6)
        bot_num2 = randint(1, 6)
        his_num_sum = his_num1 + his_num2
        bot_num_sum = bot_num1 + bot_num2
        if his_num_sum > bot_num_sum:
            k -= rat
            win = Win_or_lose_money(rat).give_cash()
            k += win
            await message.answer(f"–°—É–º–∞ —á–∏—Å–µ–ª –Ω–∞ –≤–∞—à–∏—Ö –∫—É–±–∏–∫–∞—Ö: {his_num_sum} \n "
                                 f"–°—É–º–∞ —á–∏—Å–µ–ª –Ω–∞ –∫—É–±–∏–∫–∞—Ö –±–æ—Ç–∞ : {bot_num_sum} \n"
                                 "–í–∞—à–∞ –≤–∑—è–ª–∞! \n "
                                 f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {win} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}", reply_markup=dice_keyboard)
            await Dice_state.first.set()
        elif his_num_sum < bot_num_sum:
            lose = rat
            k -= lose
            await message.answer(f"–°—É–º–∞ —á–∏—Å–µ–ª –Ω–∞ –≤–∞—à–∏—Ö –∫—É–±–∏–∫–∞—Ö: {his_num_sum} \n "
                                 f"–°—É–º–∞ —á–∏—Å–µ–ª –Ω–∞ –∫—É–±–∏–∫–∞—Ö –±–æ—Ç–∞ : {bot_num_sum} \n"
                                 "–í–∞—Å –Ω–∞—Å—Ç–∏–≥–ª–∞ –Ω–µ—É–¥–∞—á–∞! \n "
                                 f"–í–∞—à –ø—Ä–æ–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {lose} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}", reply_markup=dice_keyboard)
            await Dice_state.first.set()
        elif his_num_sum == bot_num_sum:
            await message.answer(f"–°—É–º–∞ —á–∏—Å–µ–ª –Ω–∞ –≤–∞—à–∏—Ö –∫—É–±–∏–∫–∞—Ö: {his_num_sum} \n "
                                 f"–°—É–º–∞ —á–∏—Å–µ–ª –Ω–∞ –∫—É–±–∏–∫–∞—Ö –±–æ—Ç–∞ : {bot_num_sum} \n"
                                 f"–ù–µ—É–∂–µ–ª–∏ –Ω–∏—á—å—è! \n "
                                 f"–í—Å–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–∏ —Å–≤–æ—ë–º \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}", reply_markup=dice_keyboard)
            await Dice_state.first.set()
    elif get_text_msg == '–ù–∞–∑–∞–¥':
        await state.finish()
        await message.answer('–í–∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –∏–≥—Ä', reply_markup=game_keyboard)
    elif get_text_msg == '–°–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É':
        await Dice_state.rax.set()
        await message.answer('–°–º–µ–Ω–∏—Ç–µ —Å—Ç–∞–≤–∫—É', reply_markup=rate_keyboard)
    else:
        await state.finish()
        await message.reply('–ò–∑–≤–∏–Ω–∏ –Ω–æ —è –Ω–µ –∑–Ω–∞—é —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç! \n –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" ')
    if k <= 0:
        await state.finish()
        await message.answer('–û–ô, —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º —â–µ—Ç—É', reply_markup=head_keyboard)
    elif k < rat:
        await state.finish()
        await message.answer('–î–µ–Ω–µ–≥ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —á—Ç–æ–±—ã —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Å—Ç–∞–≤–∫—É\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å: {k}\n'
                             f'–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {rat}\n'
                             '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É —É–º–µ–Ω—å—à–∏—Ç–µ —Å—Ç–∞–≤–∫—É, –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å!',
                             reply_markup=game_keyboard)


@dp.message_handler(text='–û–¥–Ω–æ—Ä—É–∫–∏–π –î–∂–æüé∞')
async def slots(message: Message):
    await message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {k}\n', reply_markup=rate_keyboard)
    await Joe_state.rax.set()


@dp.message_handler(state=Joe_state.rax)
async def rax_slots(message: Message, state: FSMContext):
    if message.text == '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É')
        await Joe_state.rate.set()
    elif message.text == '–ù–∞–∑–∞–¥':
        await state.finish()
        await message.answer('–í–∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –∏–≥—Ä', reply_markup=game_keyboard)


@dp.message_handler(state=Joe_state.rate)
async def slot_rate(message: Message, state: FSMContext):
    global slots_rate
    slots_rate = int(message.text)
    if slots_rate <= k:
        await message.answer('–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±–∏ –≤—Ä–∞—â–∞—Ç—å –±–∞—Ä–∞–±–∞–Ω', reply_markup=slots_keyboard)
        await Joe_state.first.set()
    else:
        await state.finish()
        await message.reply('–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å!')


@dp.message_handler(state=Joe_state.first)
async def joe(message: Message, state: FSMContext):
    slot_sms = message.text
    global k
    if slot_sms == '–í—Ä–∞—â–∞—Ç—å –±–∞—Ä–∞–±–∞–Ω':
        slots_win = 0
        r1 = randint(1, 5)
        r2 = randint(1, 5)
        r3 = randint(1, 5)
        if r1 == r2 == r3:
            k -= slots_rate
            slots_win += randint(slots_rate + 100, slots_rate + 500)
            k += slots_win
            await message.answer(f"–ü–û–ë–ï–î–ù–´–ô---{fruit[r1]}{fruit[r2]}{fruit[r3]}---–ü–û–ë–ï–î–ù–´–ô\n"
                                 "–í–∞—à–∞ –≤–∑—è–ª–∞! \n "
                                 f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {slots_win} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}")
        elif r1 == r2:
            k -= slots_rate
            slots_win += randint(slots_rate + 5, slots_rate + 50)
            k += slots_win
            await message.answer(f"–ü–û–ë–ï–î–ù–´–ô---{fruit[r1]}{fruit[r2]}{fruit[r3]}---–ü–û–ë–ï–î–ù–´–ô\n"
                                 "–í–∞—à–∞ –≤–∑—è–ª–∞! \n "
                                 f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {slots_win} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}")
        elif r2 == r3:
            k -= slots_rate
            slots_win += randint(slots_rate + 5, slots_rate + 50)
            k += slots_win
            await message.answer(f"–ü–û–ë–ï–î–ù–´–ô---{fruit[r1]}{fruit[r2]}{fruit[r3]}---–ü–û–ë–ï–î–ù–´–ô\n"
                                 "–í–∞—à–∞ –≤–∑—è–ª–∞! \n "
                                 f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {slots_win} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}")
        elif r1 == r3:
            k -= slots_rate
            slots_win += randint(slots_rate + 5, slots_rate + 50)
            k += slots_win
            await message.answer(f"–ü–û–ë–ï–î–ù–´–ô---{fruit[r1]}{fruit[r2]}{fruit[r3]}---–ü–û–ë–ï–î–ù–´–ô\n"
                                 "–í–∞—à–∞ –≤–∑—è–ª–∞! \n "
                                 f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {slots_win} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}")
        else:
            k -= slots_rate
            await message.answer(f"–ø—Ä–æ–∏–≥—Ä–∞—à–Ω—ã–π---{fruit[r1]}{fruit[r2]}{fruit[r3]}---–ø—Ä–æ–∏–≥—Ä–∞—à–Ω—ã–π\n"
                                 "–í–∞—Å –Ω–∞—Å—Ç–∏–≥–ª–∞ –Ω–µ—É–¥–∞—á–∞! \n "
                                 f"–í–∞—à –ø—Ä–æ–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: {slots_rate} \n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å: {k}")
    elif slot_sms == '–ù–∞–∑–∞–¥':
        await state.finish()
        await message.answer('–í–∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –∏–≥—Ä', reply_markup=game_keyboard)
    elif slot_sms == '–°–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É':
        await Joe_state.rax.set()
        await message.answer('–°–º–µ–Ω–∏—Ç–µ —Å—Ç–∞–≤–∫—É', reply_markup=rate_keyboard)
    else:
        await state.finish()
        await message.reply('–ò–∑–≤–∏–Ω–∏ –Ω–æ —è –Ω–µ –∑–Ω–∞—é —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç! \n –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" ')
    if k <= 0:
        await state.finish()
        await message.answer('–û–ô, —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º —â–µ—Ç—É', reply_markup=head_keyboard)
    elif k < slots_rate:
        await state.finish()
        await message.answer('–î–µ–Ω–µ–≥ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —á—Ç–æ–±—ã —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Å—Ç–∞–≤–∫—É\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å: {k}\n'
                             f'–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {slots_rate}\n'
                             '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É —É–º–µ–Ω—å—à–∏—Ç–µ —Å—Ç–∞–≤–∫—É, –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å!',
                             reply_markup=game_keyboard)
